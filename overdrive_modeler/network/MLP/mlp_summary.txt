sum(p.numel() for p in model.parameters() if p.requires_grad): 2312
output.shape: torch.Size([1, 8])
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
Pedals_MLP                               [1, 8]                    --
├─Sequential: 1-1                        [1, 8]                    --
│    └─Linear: 2-1                       [1, 16]                   48
│    └─LeakyReLU: 2-2                    [1, 16]                   --
│    └─Linear: 2-3                       [1, 64]                   1,088
│    └─LeakyReLU: 2-4                    [1, 64]                   --
│    └─Linear: 2-5                       [1, 16]                   1,040
│    └─LeakyReLU: 2-6                    [1, 16]                   --
│    └─Linear: 2-7                       [1, 8]                    136
==========================================================================================
Total params: 2,312
Trainable params: 2,312
Non-trainable params: 0
Total mult-adds (Units.MEGABYTES): 0.00
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.00
Params size (MB): 0.01
Estimated Total Size (MB): 0.01
==========================================================================================
